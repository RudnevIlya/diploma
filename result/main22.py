import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
from catboost import CatBoostClassifier
from imblearn.over_sampling import SMOTE

# === –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
df = pd.read_csv("merged_results_with_sentiment.csv")
df = df[df["Rating"] >= 0]

# === –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ 3 –≥—Ä–∞–Ω–∏—Ü–∞–º ===
low, high = 3.89, 4.25
def to_class(r): return 0 if r <= low else 1 if r <= high else 2
df["Class"] = df["Rating"].apply(to_class)

# === –í—ã–≤–æ–¥ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤ ===
class_counts = df["Class"].value_counts().sort_index()
class_names = ["–Ω–∏–∑–∫–∏–π", "—Å—Ä–µ–¥–Ω–∏–π", "–≤—ã—Å–æ–∫–∏–π"]
print("üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π –ø–æ –∫–ª–∞—Å—Å–∞–º:")
for idx, count in class_counts.items():
    print(f"{class_names[idx]} ({idx}): {count}")

# === –ü—Ä–∏–∑–Ω–∞–∫–∏ ===
features = ["HD_D", "Average_TFIDF", "Length", "LexicalDiversity", "SentimentScore"]
X = df[features]
y = df["Class"]

# === –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö ===
X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, test_size=0.2, random_state=42)

# === –ë–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞ —Å –ø–æ–º–æ—â—å—é SMOTE ===
smote = SMOTE(random_state=42)
X_resampled, y_resampled = smote.fit_resample(X_train, y_train)

# === –û–±—É—á–µ–Ω–∏–µ CatBoost ===
model = CatBoostClassifier(
    iterations=200,
    learning_rate=0.03,
    depth=7,
    l2_leaf_reg=11,
    random_strength=10,
    bootstrap_type="MVS",
    verbose=0
)
model.fit(X_resampled, y_resampled)

# === –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è ===
y_pred = model.predict(X_test)

# === –ú–µ—Ç—Ä–∏–∫–∏ ===
acc = accuracy_score(y_test, y_pred)
print(f"\n‚úÖ Accuracy: {acc:.4f}")
print("\nüìä Classification Report:")
print(classification_report(y_test, y_pred, target_names=class_names, zero_division=0))

# === –ú–∞—Ç—Ä–∏—Ü–∞ –æ—à–∏–±–æ–∫ ===
cm = confusion_matrix(y_test, y_pred)
plt.figure(figsize=(6, 5))
sns.heatmap(cm, annot=True, fmt="d", cmap="Blues", xticklabels=class_names, yticklabels=class_names)
plt.title("Confusion Matrix: CatBoost + SMOTE")
plt.xlabel("–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–π –∫–ª–∞—Å—Å")
plt.ylabel("–ò—Å—Ç–∏–Ω–Ω—ã–π –∫–ª–∞—Å—Å")
plt.tight_layout()
plt.savefig("cm_catboost_smote.png")
print("‚úÖ –ú–∞—Ç—Ä–∏—Ü–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ cm_catboost_smote.png")
