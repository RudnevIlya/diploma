import pandas as pd
import numpy as np
from collections import Counter
import matplotlib.pyplot as plt
import seaborn as sns

# === 1. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
df = pd.read_csv("final_merged_output_with_bert.csv")
df = df[df["Rating"] >= 1]  # —É–±–∏—Ä–∞–µ–º –º—É—Å–æ—Ä

# === 2. –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ ===
class_ranges = {
    "–Ω–∏–∑–∫–∏–π": (0, 3.85),
    "—Å—Ä–µ–¥–Ω–∏–π": (3.85, 4.25),
    "–≤—ã—Å–æ–∫–∏–π": (4.25, 5.01)
}
class_names = list(class_ranges.keys())

def rating_to_class(r):
    for idx, (name, (lo, hi)) in enumerate(class_ranges.items()):
        if lo <= r < hi:
            return idx
    return len(class_ranges) - 1

df["Class"] = df["Rating"].apply(rating_to_class)

# === 3. –ü—Ä–∏–∑–Ω–∞–∫–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ ===
features = [
"HD_D", "Average_TFIDF", "Emotional", "Length",
    "AvgWordLength", "AvgSentenceLength", "LongWordRatio",
    "LexicalDiversity", "SentimentScore", "VerbRatio","AdjRatio","QuotesCount","NegationCount","ExclamationCount","AbstractNounRatio",
    "SimLow", "SimMid", "SimHigh"
]
# features = [
# "Emotional",
#     "AvgWordLength", "AvgSentenceLength",
#     "LexicalDiversity", "SentimentScore", "VerbRatio","AdjRatio","AbstractNounRatio",
#     "SimLow", "SimMid", "SimHigh"
# ]
df = df.dropna(subset=features + ["Class"])

# === 4. –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤ ===
print("üî¢ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–≤:", Counter(df["Class"]))

# === 5. Boxplot —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ø–æ –∫–ª–∞—Å—Å–∞–º ===
melted = df.melt(id_vars="Class", value_vars=features)

plt.figure(figsize=(14, 6))
sns.boxplot(data=melted, x="variable", y="value", hue="Class")
plt.title("üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ø–æ –∫–ª–∞—Å—Å–∞–º")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# === 6. –°—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ø–æ –∫–ª–∞—Å—Å–∞–º ===
means = df.groupby("Class")[features].mean().T
means.columns = [class_names[i] for i in means.columns]
print("üìå –°—Ä–µ–¥–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ø–æ –∫–ª–∞—Å—Å–∞–º:\n")
print(means.round(3))
